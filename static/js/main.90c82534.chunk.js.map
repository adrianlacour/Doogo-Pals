{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","doggos.js","App.js","serviceWorker.js","index.js"],"names":["card","name","age","gender","breed","imageSource","className","src","alt","width","height","CardList","doggos","cardComponent","map","dog","index","Card","key","id","SearchBox","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","filteredDoggos","this","filter","doggo","toLowerCase","startsWith","console","log","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uOAceA,EAZF,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACvC,OACE,yBAAKC,UAAU,mDACb,yBAAKC,IAAOF,EAAaG,IAAI,iBAAgBC,MAAM,MAAMC,OAAO,QAChE,6BACE,4BAAKT,EAAL,MAAcG,GACd,2BAAIF,EAAJ,KAAWC,MCiBJQ,EAtBE,SAAC,GACjB,IADkBC,EACnB,EADmBA,OAEXC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACrC,OACE,kBAACC,EAAD,CAAMC,IAAKF,EACTG,GAAIP,EAAOI,GAAOG,GAClBlB,KAAMW,EAAOI,GAAOf,KACpBC,IAAKU,EAAOI,GAAOd,IACnBC,OAAQS,EAAOI,GAAOb,OACtBE,YAAaO,EAAOI,GAAOX,YAC3BD,MAAOQ,EAAOI,GAAOZ,WAK3B,OACE,6BACGS,ICLQO,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,yBAAKhB,UAAU,OACb,2BACAA,UAAU,mCACRiB,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCTLV,G,MAAS,CACpB,CACEO,GAAI,EACJlB,KAAM,SACNC,IAAK,cACLC,OAAQ,OACRC,MAAO,iBACPC,YAAa,oEAEf,CACEc,GAAI,EACJlB,KAAM,SACNC,IAAK,cACLC,OAAQ,SACRC,MAAO,UACPC,YAAa,4DAEf,CACEc,GAAI,EACJlB,KAAM,OACNC,IAAK,cACLC,OAAQ,OACRC,MAAO,SACPC,YAAa,0DAEf,CACEc,GAAI,EACJlB,KAAM,OACNC,IAAK,cACLC,OAAQ,SACRC,MAAO,kBACPC,YAAa,oEAEf,CACEc,GAAI,EACJlB,KAAM,QACNC,IAAK,cACLC,OAAQ,SACRC,MAAO,WACPC,YAAa,qEAEf,CACEc,GAAI,EACJlB,KAAM,OACNC,IAAK,cACLC,OAAQ,OACRC,MAAO,qBACPC,YAAa,uEAEf,CACEc,GAAI,EACJlB,KAAM,OACNC,IAAK,cACLC,OAAQ,OACRC,MAAO,eACPC,YAAa,oDAEf,CACEc,GAAI,EACJlB,KAAM,OACNC,IAAK,cACLC,OAAQ,OACRC,MAAO,QACPC,YAAa,0DAEf,CACEc,GAAI,EACJlB,KAAM,OACNC,IAAK,cACLC,OAAQ,SACRC,MAAO,WACPC,YAAa,6DAEf,CACEc,GAAI,GACJlB,KAAM,WACNC,IAAK,cACLC,OAAQ,SACRC,MAAO,UACPC,YAAa,8DC1CFqB,E,YA7Bb,aAAe,IAAD,8BACZ,+CAOFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAER,YAAaO,EAAME,OAAOC,SAP1C,EAAKC,MAAQ,CACXpB,OAAQA,EACRS,YAAa,IAJH,E,sEAWJ,IAAD,OACDY,EAAiBC,KAAKF,MAAMpB,OAAOuB,QAAO,SAAAC,GAE9C,OAAOA,EAAMnC,KAAKoC,cAAcC,WAAW,EAAKN,MAAMX,YAAYgB,kBAKpE,OAHAE,QAAQC,IAAIN,KAAKF,MAAMX,YAAYgB,eACnCE,QAAQC,MAGN,yBAAKlC,UAAU,MACb,wBAAIA,UAAY,MAAhB,cACA,kBAAC,EAAD,CAAWgB,aAAcY,KAAKP,iBAC9B,kBAAC,EAAD,CAAUf,OAAQqB,S,GAxBRQ,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,SD0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.90c82534.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst card = ({name, age, gender, breed, imageSource}) => {\r\n  return(\r\n    <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n      <img src = {imageSource} alt='Cardigan Corgi'width=\"300\" height=\"300\"/>\r\n      <div>\r\n        <h2>{name} - {breed}</h2>\r\n        <p>{age}, {gender}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default card;\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({doggos}) =>\r\n{\r\n  const cardComponent = doggos.map((dog, index) => {\r\n    return (\r\n      <Card key={index}\r\n        id={doggos[index].id}\r\n        name={doggos[index].name}\r\n        age={doggos[index].age}\r\n        gender={doggos[index].gender} \r\n        imageSource={doggos[index].imageSource}\r\n        breed={doggos[index].breed}\r\n    />\r\n  );\r\n})\r\n\r\n  return(\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n  return(\r\n    <div className='pa2'>\r\n      <input\r\n      className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='Search doggos'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","export const doggos = [\r\n  {\r\n    id: 1,\r\n    name: 'Albert',\r\n    age: '5 years old',\r\n    gender: 'male',\r\n    breed: 'Cardigan Corgi',\r\n    imageSource: 'https://images.dog.ceo/breeds/corgi-cardigan/n02113186_13333.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Sophie',\r\n    age: '3 years old',\r\n    gender: 'female',\r\n    breed: 'Maltese',\r\n    imageSource: 'https://images.dog.ceo/breeds/maltese/n02085936_6650.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Kubo',\r\n    age: '4 years old',\r\n    gender: 'male',\r\n    breed: 'Kelpie',\r\n    imageSource: 'https://images.dog.ceo/breeds/kelpie/n02105412_652.jpg'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Lucy',\r\n    age: '7 years old',\r\n    gender: 'female',\r\n    breed: 'German Sheppard',\r\n    imageSource: 'https://images.dog.ceo/breeds/germanshepherd/n02106662_16817.jpg'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Daisy',\r\n    age: '6 years old',\r\n    gender: 'female',\r\n    breed: 'Dachsund',\r\n    imageSource: 'https://images.dog.ceo/breeds/dachshund/dachshund-1018409_640.jpg'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Luca',\r\n    age: '4 years old',\r\n    gender: 'male',\r\n    breed: 'Norwegian Elkhound',\r\n    imageSource: 'https://images.dog.ceo/breeds/elkhound-norwegian/n02091467_1330.jpg'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Blue',\r\n    age: '2 years old',\r\n    gender: 'male',\r\n    breed: 'Bichon Frise',\r\n    imageSource: 'https://images.dog.ceo/breeds/frise-bichon/4.jpg'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Kato',\r\n    age: '5 years old',\r\n    gender: 'male',\r\n    breed: 'Husky',\r\n    imageSource: 'https://images.dog.ceo/breeds/husky/n02110185_4133.jpg'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Trin',\r\n    age: '3 years old',\r\n    gender: 'female',\r\n    breed: 'Keeshond',\r\n    imageSource: 'https://images.dog.ceo/breeds/keeshond/n02112350_7087.jpg'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Snowball',\r\n    age: '7 years old',\r\n    gender: 'female',\r\n    breed: 'Samoyed',\r\n    imageSource: 'https://images.dog.ceo/breeds/samoyed/n02111889_1451.jpg'\r\n  },\r\n]\r\n","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox.js';\r\nimport './App.css';\r\nimport {doggos} from './doggos';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      doggos: doggos,\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value })\r\n  }\r\n  render() {\r\n    const filteredDoggos = this.state.doggos.filter(doggo =>\r\n    {\r\n      return doggo.name.toLowerCase().startsWith(this.state.searchField.toLowerCase());\r\n    })\r\n    console.log(this.state.searchField.toLowerCase())\r\n    console.log()\r\n\r\n    return (\r\n      <div className='tc'>\r\n        <h1 className = 'f1'>Doggo Pals</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <CardList doggos={filteredDoggos}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App  />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}